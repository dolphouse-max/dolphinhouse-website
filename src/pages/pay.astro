---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Payment | Dolphin House">

  <section class="max-w-2xl mx-auto bg-white p-8 rounded-2xl shadow-lg mt-10 mb-20">
    <h1 class="text-2xl font-bold mb-4 text-gray-800">Complete Your Booking</h1>

    <!-- Booking Summary -->
    <div id="bookingSummary" class="mb-6 p-4 bg-sky-50 rounded-lg border border-sky-200"></div>

    <!-- Guest Details Form -->
    <form id="guestForm" class="space-y-4 mb-6">
      <h2 class="text-lg font-semibold text-gray-800 mb-3">Guest Details</h2>

      <label class="block">
        <span class="text-sm font-medium text-gray-700">Full Name <span class="text-red-500">*</span></span>
        <input id="name" type="text" class="w-full border px-3 py-2 rounded mt-1 focus:ring-2 focus:ring-sky-400 focus:outline-none" required placeholder="Enter your full name">
      </label>

      <!-- Mobile Number with OTP -->
      <label class="block">
        <span class="text-sm font-medium text-gray-700">Mobile Number <span class="text-red-500">*</span></span>
        <div class="flex gap-2">
          <input
            id="mobile"
            type="tel"
            pattern="[0-9]{10}"
            class="flex-1 border px-3 py-2 rounded mt-1 focus:ring-2 focus:ring-sky-400 focus:outline-none"
            required
            placeholder="10-digit mobile number"
          >
          <button
            id="sendOtpBtn"
            type="button"
            class="mt-1 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition font-semibold whitespace-nowrap"
          >
            Send OTP
          </button>
        </div>
        <span class="text-xs text-gray-500">We'll send a verification code via SMS</span>
      </label>

      <!-- OTP Input -->
      <div id="otpSection" class="hidden">
        <label class="block">
          <span class="text-sm font-medium text-gray-700">Enter OTP <span class="text-red-500">*</span></span>
          <div class="flex gap-2">
            <input
              id="otp"
              type="text"
              maxlength="6"
              pattern="[0-9]{6}"
              class="flex-1 border px-3 py-2 rounded mt-1 focus:ring-2 focus:ring-sky-400 focus:outline-none font-mono text-lg tracking-widest"
              placeholder="Enter 6-digit OTP"
            >
            <button
              id="verifyOtpBtn"
              type="button"
              class="mt-1 bg-sky-600 text-white px-4 py-2 rounded hover:bg-sky-700 transition font-semibold"
            >
              Verify
            </button>
          </div>
          <span class="text-xs text-gray-500">OTP valid for 5 minutes</span>
        </label>
        <button
          id="resendOtpBtn"
          type="button"
          class="text-sm text-sky-600 underline hover:text-sky-700 mt-2"
        >
          Resend OTP
        </button>
      </div>

      <!-- Verification Status -->
      <div id="otpStatus" class="hidden mt-2 p-2 rounded"></div>

      <label class="block">
        <span class="text-sm font-medium text-gray-700">Email (Optional)</span>
        <input id="email" type="email" class="w-full border px-3 py-2 rounded mt-1 focus:ring-2 focus:ring-sky-400 focus:outline-none" placeholder="your@email.com">
      </label>

      <label class="block">
        <span class="text-sm font-medium text-gray-700">Number of Guests</span>
        <input id="guests" type="number" min="1" max="10" class="w-full border px-3 py-2 rounded mt-1" value="2">
      </label>
    </form>

    <!-- Payment Charges -->
    <div id="charges" class="mb-6 p-4 bg-gray-50 rounded border"></div>

    <!-- Payment QR Code -->
    <div class="text-center mb-6">
      <img id="gpay" src="/uploader/qr-code.webp" alt="Payment QR Code" class="mx-auto w-48 h-48 object-contain"/>
      <p class="text-sm text-gray-600 mt-2">Scan QR code and pay the amount shown above</p>
    </div>

    <!-- INTEGRATED: Payment Proof Section -->
    <div class="mb-6 p-6 bg-gradient-to-r from-sky-50 to-blue-50 rounded-lg border-2 border-sky-200">
      <h3 class="text-lg font-bold text-gray-800 mb-4">üìù Submit Payment Proof <span class="text-red-500">*</span></h3>
      
      <div class="grid md:grid-cols-2 gap-4 mb-4">
        <!-- WhatsApp Card -->
        <div id="whatsappCard" class="proof-card bg-white rounded-lg p-4 cursor-pointer border-2 border-gray-300 hover:border-green-500">
          <h4 class="font-bold mb-2">üì≤ WhatsApp</h4>
          <p class="text-sm text-gray-600 mb-3">Send on WhatsApp (Easiest!)</p>
          <button type="button" id="openWhatsappBtn" class="w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 hidden">
            Open WhatsApp
          </button>
        </div>

        <!-- Upload Card -->
        <div id="uploadCard" class="proof-card bg-white rounded-lg p-4 cursor-pointer border-2 border-gray-300 hover:border-sky-500">
          <h4 class="font-bold mb-2">üìÅ Upload</h4>
          <p class="text-sm text-gray-600 mb-3">Upload from gallery</p>
          <div id="uploadSection" class="hidden">
            <label class="block w-full bg-sky-600 text-white py-2 rounded hover:bg-sky-700 text-center cursor-pointer text-sm">
              <input type="file" id="fileInput" accept="image/*" class="hidden">
              <span id="fileLabel">Choose File</span>
            </label>
          </div>
        </div>
      </div>

      <!-- UPI Card -->
      <div id="upiCard" class="proof-card bg-white rounded-lg p-4 cursor-pointer border-2 border-gray-300 hover:border-purple-500">
        <h4 class="font-bold mb-2">üí≥ UPI Transaction ID</h4>
        <p class="text-sm text-gray-600 mb-3">Enter UPI details (No screenshot needed)</p>
        
        <div id="upiSection" class="space-y-3 hidden">
          <div>
            <label class="block text-sm font-medium mb-1">Transaction ID *</label>
            <input type="text" id="upiTransactionId" placeholder="123456789012" 
              class="w-full px-3 py-2 border rounded text-sm">
            <p class="text-xs text-gray-500 mt-1">12-digit UTR number</p>
          </div>
          <div>
            <label class="block text-sm font-medium mb-1">From (Mobile/UPI) *</label>
            <input type="text" id="upiFrom" placeholder="9876543210 or user@paytm" 
              class="w-full px-3 py-2 border rounded text-sm">
          </div>
        </div>
      </div>

      <div id="proofError" class="hidden text-red-600 text-sm mt-3"></div>
      <div id="proofSuccess" class="hidden text-green-600 text-sm mt-3 font-medium">‚úÖ Payment proof submitted!</div>
    </div>

    <!-- Confirm Button -->
    <button id="confirmBtn" disabled class="w-full bg-gray-400 text-white px-6 py-4 rounded-lg cursor-not-allowed font-bold text-lg mb-4">
      Submit Payment Proof First
    </button>

    <p id="msg" class="text-green-600 mt-4 hidden text-center font-medium"></p>
  </section>

  <script>
    const params = new URLSearchParams(location.search);
    const bookingId = params.get('bookingId');
    const customerId = params.get('customerId');
    const room = params.get('room');
    const roomLabel = params.get('roomLabel');
    const acType = params.get('acType');
    const checkin = params.get('checkin');
    const checkout = params.get('checkout');
    const guests = parseInt(params.get('guests') || '2');
    const nights = parseInt(params.get('nights') || '1');
    const baseTotal = parseFloat(params.get('total') || '0');

    const summaryDiv = document.getElementById('bookingSummary');
    const chargesDiv = document.getElementById('charges');
    const guestsInput = document.getElementById('guests');
    const confirmBtn = document.getElementById('confirmBtn');

    let mobileVerified = false;
    let proofSubmitted = false;
    let selectedProofMethod = '';
    let uploadedFile = null;
    const extraPersonCharge = 700;

    // Display booking summary
    summaryDiv.innerHTML = `
      <div class="space-y-2">
        <div class="flex justify-between text-lg font-bold text-sky-700">
          <span>Customer ID:</span>
          <span class="font-mono">${customerId || 'N/A'}</span>
        </div>
        <div class="border-t pt-2">
          <div class="flex justify-between"><span class="font-medium">Room:</span><span>${roomLabel} (${acType.toUpperCase()})</span></div>
          <div class="flex justify-between"><span class="font-medium">Check-in:</span><span>${checkin}</span></div>
          <div class="flex justify-between"><span class="font-medium">Check-out:</span><span>${checkout}</span></div>
          <div class="flex justify-between"><span class="font-medium">Nights:</span><span>${nights}</span></div>
        </div>
      </div>
    `;

    function updateCharges() {
      const currentGuests = parseInt(guestsInput.value);
      const baseGuests = room.includes('family') ? 4 : 2;
      const extras = Math.max(0, currentGuests - baseGuests);
      const extraCharges = extras * extraPersonCharge * nights;
      const finalTotal = baseTotal + extraCharges;

      chargesDiv.innerHTML = `
        <div class="space-y-2">
          <div class="flex justify-between"><span>Room Charges:</span><span class="font-semibold">‚Çπ${baseTotal}</span></div>
          ${extras > 0 ? `<div class="flex justify-between text-sm"><span>Extra Person (${extras} √ó ‚Çπ${extraPersonCharge} √ó ${nights} nights):</span><span>‚Çπ${extraCharges}</span></div>` : ''}
          <div class="border-t pt-2 mt-2 flex justify-between text-lg"><span class="font-bold">Total Payable:</span><span class="font-bold text-sky-600">‚Çπ${finalTotal}</span></div>
        </div>
      `;
    }

    guestsInput.addEventListener('input', updateCharges);
    updateCharges();

    // ==========================================
    // PAYMENT PROOF LOGIC
    // ==========================================

    const whatsappCard = document.getElementById('whatsappCard');
    const uploadCard = document.getElementById('uploadCard');
    const upiCard = document.getElementById('upiCard');
    const openWhatsappBtn = document.getElementById('openWhatsappBtn');
    const uploadSection = document.getElementById('uploadSection');
    const upiSection = document.getElementById('upiSection');
    const fileInput = document.getElementById('fileInput');
    const fileLabel = document.getElementById('fileLabel');
    const proofError = document.getElementById('proofError');
    const proofSuccess = document.getElementById('proofSuccess');

    function selectProofMethod(method) {
      selectedProofMethod = method;
      
      // Reset all cards
      document.querySelectorAll('.proof-card').forEach(card => {
        card.classList.remove('border-green-500', 'border-sky-500', 'border-purple-500', 'shadow-lg', 'bg-green-50', 'bg-sky-50', 'bg-purple-50');
        card.classList.add('border-gray-300', 'bg-white');
      });

      // Hide all sections
      openWhatsappBtn.classList.add('hidden');
      uploadSection.classList.add('hidden');
      upiSection.classList.add('hidden');
      proofError.classList.add('hidden');

      // Show selected
      if (method === 'whatsapp') {
        whatsappCard.classList.add('border-green-500', 'shadow-lg', 'bg-green-50');
        openWhatsappBtn.classList.remove('hidden');
      } else if (method === 'upload') {
        uploadCard.classList.add('border-sky-500', 'shadow-lg', 'bg-sky-50');
        uploadSection.classList.remove('hidden');
      } else if (method === 'upi') {
        upiCard.classList.add('border-purple-500', 'shadow-lg', 'bg-purple-50');
        upiSection.classList.remove('hidden');
      }
    }

    whatsappCard.addEventListener('click', () => selectProofMethod('whatsapp'));
    uploadCard.addEventListener('click', () => selectProofMethod('upload'));
    upiCard.addEventListener('click', () => selectProofMethod('upi'));

    // WhatsApp
    openWhatsappBtn.addEventListener('click', () => {
      const msg = `Hi, I want to submit payment proof for Booking ID: ${bookingId}`;
      window.open(`https://wa.me/918554871073?text=${encodeURIComponent(msg)}`, '_blank');
      
      // Mark as submitted (user will send on WhatsApp)
      proofSubmitted = true;
      proofSuccess.classList.remove('hidden');
      proofSuccess.textContent = '‚úÖ Please send screenshot on WhatsApp. Then click Confirm Booking below.';
      enableConfirmButton();
    });

    // File upload
    fileInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          proofError.textContent = 'File must be less than 5MB';
          proofError.classList.remove('hidden');
          fileInput.value = '';
          return;
        }
        uploadedFile = file;
        fileLabel.textContent = `‚úì ${file.name}`;
        proofSubmitted = true;
        proofSuccess.classList.remove('hidden');
        enableConfirmButton();
      }
    });

    // Enable confirm button
    function enableConfirmButton() {
      confirmBtn.disabled = false;
      confirmBtn.classList.remove('bg-gray-400', 'cursor-not-allowed');
      confirmBtn.classList.add('bg-sky-600', 'hover:bg-sky-700', 'cursor-pointer');
      confirmBtn.textContent = 'Confirm Booking';
    }

    // ==========================================
    // OTP LOGIC
    // ==========================================

    const mobileInput = document.getElementById('mobile');
    const sendOtpBtn = document.getElementById('sendOtpBtn');
    const otpSection = document.getElementById('otpSection');
    const otpInput = document.getElementById('otp');
    const verifyOtpBtn = document.getElementById('verifyOtpBtn');
    const resendOtpBtn = document.getElementById('resendOtpBtn');
    const otpStatus = document.getElementById('otpStatus');

    function showOtpStatus(message, type) {
      otpStatus.textContent = message;
      otpStatus.className = `mt-2 p-2 rounded ${type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`;
      otpStatus.classList.remove('hidden');
    }

    sendOtpBtn?.addEventListener('click', async () => {
      const mobile = mobileInput.value.trim();

      if (!mobile || !/^[6-9][0-9]{9}$/.test(mobile)) {
        showOtpStatus('Please enter a valid 10-digit mobile number', 'error');
        return;
      }

      sendOtpBtn.disabled = true;
      sendOtpBtn.textContent = 'Sending...';

      try {
        const res = await fetch('/api/send-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ mobile })
        });

        const data = await res.json();

        if (data.success) {
          showOtpStatus('‚úÖ OTP sent successfully!', 'success');
          otpSection.classList.remove('hidden');
          mobileInput.disabled = true;
          sendOtpBtn.textContent = 'OTP Sent';
          otpInput.focus();
        } else {
          showOtpStatus(`‚ùå ${data.error}`, 'error');
          sendOtpBtn.disabled = false;
          sendOtpBtn.textContent = 'Send OTP';
        }
      } catch (err) {
        showOtpStatus('‚ùå Network error', 'error');
        sendOtpBtn.disabled = false;
        sendOtpBtn.textContent = 'Send OTP';
      }
    });

    verifyOtpBtn?.addEventListener('click', async () => {
      const mobile = mobileInput.value.trim();
      const otp = otpInput.value.trim();

      if (!otp || otp.length !== 6) {
        showOtpStatus('Please enter 6-digit OTP', 'error');
        return;
      }

      verifyOtpBtn.disabled = true;
      verifyOtpBtn.textContent = 'Verifying...';

      try {
        const res = await fetch('/api/verify-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ mobile, otp })
        });

        const data = await res.json();

        if (data.success) {
          showOtpStatus('‚úÖ Mobile verified!', 'success');
          mobileVerified = true;
          verifyOtpBtn.textContent = 'Verified ‚úì';
          verifyOtpBtn.classList.remove('bg-sky-600');
          verifyOtpBtn.classList.add('bg-green-600');
          verifyOtpBtn.disabled = true;
          otpInput.disabled = true;
          resendOtpBtn.classList.add('hidden');
        } else {
          showOtpStatus(`‚ùå ${data.error}`, 'error');
          verifyOtpBtn.disabled = false;
          verifyOtpBtn.textContent = 'Verify';
        }
      } catch (err) {
        showOtpStatus('‚ùå Network error', 'error');
        verifyOtpBtn.disabled = false;
        verifyOtpBtn.textContent = 'Verify';
      }
    });

    resendOtpBtn?.addEventListener('click', () => {
      mobileInput.disabled = false;
      sendOtpBtn.disabled = false;
      sendOtpBtn.textContent = 'Resend OTP';
      otpInput.value = '';
      otpStatus.classList.add('hidden');
      sendOtpBtn.click();
    });

    // ==========================================
    // CONFIRM BOOKING
    // ==========================================

    confirmBtn?.addEventListener('click', async () => {
      const name = document.getElementById('name').value.trim();
      const mobile = mobileInput.value.trim();
      const email = document.getElementById('email').value.trim();

      // Validations
      if (!name) {
        alert('Please enter your full name');
        return;
      }

      if (!mobile || !/^[0-9]{10}$/.test(mobile)) {
        alert('Please enter a valid mobile number');
        return;
      }

      if (!mobileVerified) {
        alert('Please verify your mobile with OTP first');
        return;
      }

      if (!proofSubmitted) {
        alert('Please submit payment proof first');
        return;
      }

      // Validate proof method
      if (selectedProofMethod === 'upload' && !uploadedFile) {
        alert('Please upload payment screenshot');
        return;
      }

      if (selectedProofMethod === 'upi') {
        const txnId = document.getElementById('upiTransactionId').value.trim();
        const from = document.getElementById('upiFrom').value.trim();
        
        if (!txnId || txnId.length < 12) {
          alert('Transaction ID must be at least 12 characters');
          return;
        }
        
        if (!from) {
          alert('Please enter sender mobile or UPI ID');
          return;
        }
      }

      const currentGuests = parseInt(guestsInput.value);
      const baseGuests = room.includes('family') ? 4 : 2;
      const extras = Math.max(0, currentGuests - baseGuests);
      const extraCharges = extras * extraPersonCharge * nights;
      const finalTotal = baseTotal + extraCharges;

      confirmBtn.disabled = true;
      confirmBtn.textContent = 'Processing...';

      try {
        // Submit payment proof
        const formData = new FormData();
        formData.append('booking_id', bookingId);
        formData.append('payment_proof_method', selectedProofMethod);

        if (selectedProofMethod === 'upload') {
          formData.append('payment_screenshot', uploadedFile);
        } else if (selectedProofMethod === 'upi') {
          formData.append('upi_transaction_id', document.getElementById('upiTransactionId').value);
          formData.append('upi_from', document.getElementById('upiFrom').value);
        }

        const proofRes = await fetch('/api/submit-payment-proof', {
          method: 'POST',
          body: formData
        });

        if (!proofRes.ok) {
          throw new Error('Failed to submit payment proof');
        }

        // Update booking
        const updateRes = await fetch('/api/bookings', {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            id: bookingId,
            name,
            email: email || '',
            mobile,
            guests: currentGuests,
            total: finalTotal,
            status: 'payment_submitted'
          })
        });

        if (!updateRes.ok) {
          throw new Error('Failed to update booking');
        }

        const msg = document.getElementById('msg');
        msg.innerHTML = `‚úÖ Booking confirmed! Your Customer ID: <strong class="font-mono text-xl">${customerId}</strong><br>Redirecting...`;
        msg.classList.remove('hidden');

        setTimeout(() => {
          window.location.href = `/thank-you?customerId=${customerId}&name=${encodeURIComponent(name)}`;
        }, 2000);

      } catch (err) {
        console.error('Booking error:', err);
        alert('Failed to confirm booking. Please try again or contact us.');
        confirmBtn.disabled = false;
        confirmBtn.textContent = 'Confirm Booking';
      }
    });

    // Validate booking ID
    if (!bookingId || !customerId) {
      summaryDiv.innerHTML = '<p class="text-red-600">‚ùå Invalid booking.</p>';
    }
  </script>

  <style>
    .proof-card {
      transition: all 0.3s ease;
    }
  </style>

</Layout>