---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Booking | Dolphin House">

  <section class="max-w-3xl mx-auto bg-white p-8 rounded-2xl shadow-lg mt-10 mb-20">
    <h1 class="text-3xl font-bold mb-4 text-center text-gray-800">Check Availability & Book</h1>

    <!-- Step 1: Guest Info -->
    <div id="guestForm" class="space-y-4 mb-8">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Guest Name</label>
        <input id="guestName" type="text" placeholder="Enter full name"
               class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-sky-400 focus:outline-none"/>
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
        <input id="guestEmail" type="email" placeholder="Enter email address"
               class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-sky-400 focus:outline-none"/>
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Number of Persons</label>
        <input id="guestCount" type="number" min="1" max="10" value="2"
               class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-sky-400 focus:outline-none"/>
      </div>
    </div>

    <!-- Step 2: Date selection -->
    <div class="space-y-4 mb-6">
      <label class="block">Check-in
        <input id="checkin" type="date" class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-sky-400 focus:outline-none"/>
      </label>
      <label class="block">Check-out
        <input id="checkout" type="date" class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-sky-400 focus:outline-none"/>
      </label>
      <button id="checkBtn" class="w-full bg-sky-600 text-white py-3 rounded-lg hover:bg-sky-700 transition font-semibold">
        Check Availability
      </button>
    </div>

    <!-- Step 3: Room selection -->
    <div id="availability" class="hidden mt-8">
      <h2 class="text-xl font-semibold mb-3 text-gray-800 text-center">Available Room Types</h2>
      <div id="roomList" class="grid gap-4"></div>
    </div>
  </section>

  <script client:load>
    async function fetchBookings() {
      const res = await fetch('/api/bookings');
      return await res.json();
    }

    async function fetchInventory() {
      const res = await fetch('/api/inventory');
      return await res.json();
    }

    function rangesOverlap(aStart, aEnd, bStart, bEnd) {
      return (aStart < bEnd) && (bStart < aEnd);
    }

    function countBooked(bookings, roomType, checkin, checkout) {
      const inD = new Date(checkin);
      const outD = new Date(checkout);
      let c = 0;
      bookings.forEach(b => {
        if (b.room !== roomType || b.status === 'cancelled') return;
        const bi = new Date(b.checkin), bo = new Date(b.checkout);
        if (rangesOverlap(inD, outD, bi, bo)) c++;
      });
      return c;
    }

    function availableRooms(inv, bookings, rt, ci, co) {
      const total = inv[rt]?.qty || 0;
      const reserved = countBooked(bookings, rt, ci, co);
      return Math.max(0, total - reserved);
    }

    const checkBtn = document.getElementById('checkBtn');
    const availability = document.getElementById('availability');
    const roomList = document.getElementById('roomList');

    checkBtn.addEventListener('click', async () => {
      const name = document.getElementById('guestName').value.trim();
      const email = document.getElementById('guestEmail').value.trim();
      const guests = parseInt(document.getElementById('guestCount').value);
      const checkin = document.getElementById('checkin').value;
      const checkout = document.getElementById('checkout').value;

      if (!name || !email) {
        alert('Please fill in guest name and email.');
        return;
      }
      if (!checkin || !checkout || new Date(checkin) >= new Date(checkout)) {
        alert('Please choose valid check-in and check-out dates.');
        return;
      }

      const inv = await fetchInventory();
      const bookings = await fetchBookings();

      roomList.innerHTML = '';
      Object.keys(inv).forEach(rt => {
        const avail = availableRooms(inv, bookings, rt, checkin, checkout);
        const div = document.createElement('div');
        div.className = "border p-4 rounded-lg flex justify-between items-center bg-gray-50 hover:bg-white shadow-sm";
        div.innerHTML = `
          <div>
            <div class="text-lg font-semibold">${inv[rt].label}</div>
            <div class="text-sm text-gray-600">₹${inv[rt].rateNonAC} / night (Non-AC) | ₹${inv[rt].rateAC} / night (AC)</div>
            <div class="text-sm text-gray-500">Available: ${avail}</div>
          </div>
          <div class="flex gap-2">
            <button ${avail===0?'disabled':''} data-rt="${rt}" data-type="nonac"
              class="bg-sky-500 text-white px-4 py-2 rounded-md hover:bg-sky-600 disabled:opacity-40 selectRoom">
              Book Non-AC
            </button>
            <button ${avail===0?'disabled':''} data-rt="${rt}" data-type="ac"
              class="bg-teal-500 text-white px-4 py-2 rounded-md hover:bg-teal-600 disabled:opacity-40 selectRoom">
              Book AC
            </button>
          </div>`;
        roomList.appendChild(div);
      });

      availability.classList.remove('hidden');

      document.querySelectorAll('.selectRoom').forEach(btn => {
        btn.addEventListener('click', async () => {
          const rt = btn.dataset.rt;
          const type = btn.dataset.type;
          const rate = type === "ac" ? inv[rt].rateAC : inv[rt].rateNonAC;
          const nights = (new Date(checkout) - new Date(checkin)) / 86400000;
          const total = nights * rate;

          const res = await fetch('/api/bookings', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              name, email, room: rt, acType: type,
              checkin, checkout, guests, nights, total, status: 'payment_pending'
            })
          });
          const data = await res.json();
          if (data.id) window.location.href = `/pay?bookingId=${data.id}`;
          else alert('Error creating booking.');
        });
      });
    });
  </script>

</Layout>
